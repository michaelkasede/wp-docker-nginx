version: '3.8'

services:
  # Using mariadb as the MySql database because it's a high perfomamce database
  mariadb:
    image: mariadb:${MARIADB_VER}
    container_name: mariadb
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - dbdata:/var/lib/mysql
    networks:
      - web
  # Using the Wordpress-fpm image optimized for high performance. PHP-FPM makes php applications fast.
  wordpress:
    depends_on:
      - mariadb
      - redis
    image: wordpress:${WORDPRESS_VER}
    container_name: wordpress
    restart: unless-stopped
    environment:
      WORDPRESS_DB_HOST: ${WORDPRESS_DB_HOST}
      WORDPRESS_DB_NAME: ${WORDPRESS_DB_NAME}
      WORDPRESS_DB_USER: ${WORDPRESS_DB_USER}
      WORDPRESS_DB_PASSWORD: ${WORDPRESS_DB_PASSWORD}
      WORDPRESS_TABLE_PREFIX: ${WORDPRESS_TABLE_PREFIX}
      WORDPRESS_CONFIG_EXTRA: |
          define( 'WP_REDIS_HOST', 'redis' );
          define( 'WP_REDIS_PORT', 6379 );
          define( 'WP_DEBUG', false );
          define( 'COMPRESS_CSS', true );
          define( 'COMPRESS_SCRIPTS', true );
          define( 'CONCATENATE_SCRIPTS', true );
          define( 'ENFORCE_GZIP', true );
          define( 'AUTOSAVE_INTERVAL', 120 );
          define( 'WP_POST_REVISIONS', 10);
          define( 'MEDIA_TRASH', true );
          define( 'EMPTY_TRASH_DAYS', 30 );
          define( 'IMAGE_EDIT_OVERWRITE', true );
          define( 'DISALLOW_FILE_EDIT', true );
    volumes:
      - wordpress:/var/www/html
      - ./php/custom.ini:/usr/local/etc/php/conf.d/custom.ini
    networks:
      - web
  # Nginx is used as the web server because it support PHP-FPM engine and has better caching fucntionality
  nginx:
    depends_on:
      - wordpress
    image: nginx:${NGINX_VER}
    container_name: nginx
    restart: unless-stopped
    volumes:
      - wordpress:/var/www/html
      - ./nginx:/etc/nginx/conf.d
      - ./certs:/etc/ssl/certs
    ports:
      - 80:80
      - 443:443
    networks:
      - web
      - proxy
  # Redis
  # Add Redis as a Database Object Cache for WordPress
  redis:
    image: redis:${REDIS_VER}
    container_name: redis
    restart: unless-stopped
    command:
      - redis-server
      - --save 60 500 # This config will make Redis automatically dump the dataset to disk every 60 seconds if at least 500 keys changed:
      - --loglevel warning
      - --maxmemory 128mb
      - --maxmemory-policy allkeys-lfu # Keeps frequently used keys; removes least frequently used (LFU) keys
    volumes:
      - redis:/data
    networks:
      - web

volumes:
  wordpress:
  dbdata:
  redis:

networks:
  web:
    external: false
  proxy:
    external: true